import React, { useEffect } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import Swal from "sweetalert2";


function DetailsReservation() {
  const location = useLocation();
  const navigate = useNavigate();

  // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£ navigate ‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡πÇ‡∏£‡∏á‡∏´‡∏ô‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≤‡∏£‡∏≤‡πÇ‡∏≠‡πÄ‡∏Å‡∏∞
  const { theater, seats, studentCodes } = location.state || {};

  // Persist state if present; otherwise try to load from localStorage
  useEffect(() => {
    if (location.state && theater && seats && studentCodes) {
      try {
        localStorage.setItem(
          "lastReservation",
          JSON.stringify({ theater, seats, studentCodes, savedAt: Date.now() })
        );
      } catch { /* ignore persist errors */ }
      return;
    }
    try {
      const stored = JSON.parse(localStorage.getItem("lastReservation"));
      if (stored && stored.theater && stored.seats && stored.studentCodes) {
        navigate("/details-reservation", { state: stored, replace: true });
        return;
      }
    } catch { /* ignore load errors */ }
    // no stored data -> keep user on this page and show empty state
  }, [location.state, theater, seats, studentCodes, navigate]);

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏≠‡∏∞‡πÑ‡∏£
  const isKaraoke =
    theater && (theater.includes("‡∏Ñ‡∏≤‡∏£‡∏≤‡πÇ‡∏≠‡πÄ‡∏Å‡∏∞") || theater.includes("karaoke"));

  return (
    <div className="min-h-screen bg-pink-50">
      
      <div className="max-w-2xl mx-auto py-10 px-6">
        <h1 className="text-3xl font-bold text-pink-600 text-center mb-8">
          {isKaraoke ? "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏≤‡∏£‡∏≤‡πÇ‡∏≠‡πÄ‡∏Å‡∏∞ üé§" : "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÇ‡∏£‡∏á‡∏†‡∏≤‡∏û‡∏¢‡∏ô‡∏ï‡∏£‡πå üé¨"}
        </h1>

        {theater && seats && studentCodes ? (
          <div className="bg-white rounded-2xl shadow-md p-6 text-blue-950">
            <p className="mb-3">
              <b>{isKaraoke ? "‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á:" : "‡πÇ‡∏£‡∏á‡∏†‡∏≤‡∏û‡∏¢‡∏ô‡∏ï‡∏£‡πå:"}</b> {theater}
            </p>

            {/* ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏≤‡∏£‡∏≤‡πÇ‡∏≠‡πÄ‡∏Å‡∏∞‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ ‚Äú‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‚Äù ‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏á‡∏´‡∏ô‡∏±‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á */}
            {!isKaraoke && (
              <p className="mb-3">
                <b>‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á:</b> {seats.join(", ")}
              </p>
            )}

            {isKaraoke && (
              <p className="mb-3">
                <b>‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á:</b> {seats.join(", ")}
              </p>
            )}

            <div className="mb-5">
              <b>‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á:</b>
              <ul className="list-disc ml-6 mt-2 space-y-1">
                {studentCodes.map((code, i) => (
                  <li key={i}>{code}</li>
                ))}
              </ul>
            </div>

            <div className="flex gap-3 justify-center mt-6">
              <button
                onClick={async () => {
                  const res = await Swal.fire({
                    title: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á",
                    text: "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#ef4444",
                    cancelButtonColor: "#6b7280",
                    confirmButtonText: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô",
                    cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
                  });
                  if (!res.isConfirmed) return;
                  try { localStorage.removeItem("lastReservation"); } catch { /* ignore */ }
                  await Swal.fire({
                    title: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                    icon: "success",
                    confirmButtonColor: "#f472b6",
                  });
                  navigate("/details-reservation", { replace: true });
                }}
                className="bg-red-500 text-white px-6 py-2 rounded-xl hover:bg-red-600 transition"
              >
                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
              </button>
              <button
                onClick={() => navigate("/")}
                className="bg-pink-500 text-white px-6 py-2 rounded-xl hover:bg-pink-600 transition"
              >
                ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
              </button>
            </div>
          </div>
        ) : (
          <div className="text-center text-blue-950">
            <p className="text-gray-600 mb-6">‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ</p>
            <div className="flex gap-3 justify-center">
              <button
                onClick={() => navigate("/movies")}
                className="btn bg-pink-500 text-white rounded-xl hover:bg-pink-600"
              >
                ‡πÑ‡∏õ‡∏à‡∏≠‡∏á‡∏£‡∏≠‡∏ö‡πÇ‡∏£‡∏á‡∏´‡∏ô‡∏±‡∏á
              </button>
              <button
                onClick={() => navigate("/karaoke")}
                className="btn bg-indigo-500 text-white rounded-xl hover:bg-indigo-600"
              >
                ‡πÑ‡∏õ‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏≤‡∏£‡∏≤‡πÇ‡∏≠‡πÄ‡∏Å‡∏∞
              </button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}

export default DetailsReservation;
